Analyzing and compiling 0002_response.c to 0002_response.o
0002_response.c:35:5: warning: Undefined or garbage value returned to caller [core.uninitialized.UndefReturn]
    return dummy.next;
    ^~~~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0002_response.c succeeded
Analyzing and compiling 0003_response.c to 0003_response.o
Compilation and analysis of 0003_response.c succeeded
Analyzing and compiling 0004_response.c to 0004_response.o
Compilation and analysis of 0004_response.c succeeded
Analyzing and compiling 0005_response.c to 0005_response.o
Compilation and analysis of 0005_response.c succeeded
Analyzing and compiling 0007_response.c to 0007_response.o
Compilation and analysis of 0007_response.c succeeded
Analyzing and compiling 0009_response.c to 0009_response.o
Compilation and analysis of 0009_response.c succeeded
Analyzing and compiling 0010_response.c to 0010_response.o
Compilation and analysis of 0010_response.c succeeded
Analyzing and compiling 0011_response.c to 0011_response.o
Compilation and analysis of 0011_response.c succeeded
Analyzing and compiling 0014_response.c to 0014_response.o
Compilation and analysis of 0014_response.c succeeded
Analyzing and compiling 0015_response.c to 0015_response.o
Compilation and analysis of 0015_response.c succeeded
Analyzing and compiling 0019_response.c to 0019_response.o
0019_response.c:15:16: warning: Access to field 'next' results in a dereference of a null pointer (loaded from variable 'head') [core.NullDereference]
        head = head->next;
               ^~~~~~~~~~
0019_response.c:24:18: warning: Access to field 'next' results in a dereference of a null pointer (loaded from field 'next') [core.NullDereference]
    slow->next = slow->next->next;
                 ^~~~~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0019_response.c succeeded
Analyzing and compiling 0021_response.c to 0021_response.o
Compilation and analysis of 0021_response.c succeeded
Analyzing and compiling 0022_response.c to 0022_response.o
0022_response.c:7:60: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
        result[*returnSize] = (char *)malloc((2 * max + 1) * sizeof(char));
                                             ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
0022_response.c:15:38: warning: Out of bound memory access (accessed memory precedes memory block) [alpha.security.ArrayBoundV2]
        current[strlen(current) + 1] = '\0';
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
0022_response.c:30:48: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    char *current = (char *)malloc((2 * n + 1) * sizeof(char));
                                   ~~~~~~~~~~~~^~~~~~~~~~~~~~
3 warnings generated.
Compilation and analysis of 0022_response.c succeeded
Analyzing and compiling 0023_response.c to 0023_response.o
Compilation and analysis of 0023_response.c succeeded
Analyzing and compiling 0024_response.c to 0024_response.o
Compilation and analysis of 0024_response.c succeeded
Analyzing and compiling 0025_response.c to 0025_response.o
Compilation and analysis of 0025_response.c succeeded
Analyzing and compiling 0026_response.c to 0026_response.o
Compilation and analysis of 0026_response.c succeeded
Analyzing and compiling 0027_response.c to 0027_response.o
Compilation and analysis of 0027_response.c succeeded
Analyzing and compiling 0028_response.c to 0028_response.o
Compilation and analysis of 0028_response.c succeeded
Analyzing and compiling 0033_response.c to 0033_response.o
Compilation and analysis of 0033_response.c succeeded
Analyzing and compiling 0035_response.c to 0035_response.o
Compilation and analysis of 0035_response.c succeeded
Analyzing and compiling 0036_response.c to 0036_response.o
Compilation and analysis of 0036_response.c succeeded
Analyzing and compiling 0039_response.c to 0039_response.o
0039_response.c:7:56: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
        result[*returnSize] = (int*)malloc(sizeof(int) * bufferSize);
                                           ~~~~~~~~~~~~^~~~~~~~~~~~
0039_response.c:26:47: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** result = (int**)malloc(sizeof(int*) * maxSize);
                                 ~~~~~~~~~~~~~^~~~~~~~~
0039_response.c:27:51: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    *returnColumnSizes = (int*)malloc(sizeof(int) * maxSize);
                                      ~~~~~~~~~~~~^~~~~~~~~
0039_response.c:28:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* buffer = (int*)malloc(sizeof(int) * (target + 1));
                               ~~~~~~~~~~~~^~~~~~~~~~~~~~
4 warnings generated.
Compilation and analysis of 0039_response.c succeeded
Analyzing and compiling 0040_response.c to 0040_response.o
0040_response.c:6:57: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
        results[*returnSize] = (int*)malloc(sizeof(int) * index);
                                            ~~~~~~~~~~~~^~~~~~~
0040_response.c:35:45: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* current = (int*)malloc(sizeof(int) * candidatesSize);
                                ~~~~~~~~~~~~^~~~~~~~~~~~~~~~
0040_response.c:38:5: warning: Potential leak of memory pointed to by 'columnSizes' [unix.Malloc]
    return results;
    ^~~~~~~~~~~~~~
0040_response.c:38:5: warning: Potential leak of memory pointed to by 'current' [unix.Malloc]
    return results;
    ^~~~~~~~~~~~~~
4 warnings generated.
Compilation and analysis of 0040_response.c succeeded
Analyzing and compiling 0041_response.c to 0041_response.o
Compilation and analysis of 0041_response.c succeeded
Analyzing and compiling 0043_response.c to 0043_response.o
0043_response.c:27:38: warning: Potential leak of memory pointed to by 'result' [unix.Malloc]
    if (index == len1 + len2) return "0";
                                     ^~~
0043_response.c:27:38: warning: Potential leak of memory pointed to by 'finalResult' [unix.Malloc]
    if (index == len1 + len2) return "0";
                                     ^~~
2 warnings generated.
Compilation and analysis of 0043_response.c succeeded
Analyzing and compiling 0045_response.c to 0045_response.o
Compilation and analysis of 0045_response.c succeeded
Analyzing and compiling 0046_response.c to 0046_response.o
0046_response.c:30:37: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* tempList = malloc(numsSize * sizeof(int));
                           ~~~~~~~~~^~~~~~~~~~~~~
0046_response.c:31:33: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* used = malloc(numsSize * sizeof(int));
                       ~~~~~~~~~^~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0046_response.c succeeded
Analyzing and compiling 0048_response.c to 0048_response.o
Compilation and analysis of 0048_response.c succeeded
Analyzing and compiling 0050_response.c to 0050_response.o
Compilation and analysis of 0050_response.c succeeded
Analyzing and compiling 0051_response.c to 0051_response.o
0051_response.c:12:29: error: function definition is not allowed here
    void backtrack(int row) {
                            ^
0051_response.c:40:5: error: call to undeclared function 'backtrack'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
    backtrack(0);
    ^
2 errors generated.
Compilation and analysis of 0051_response.c failed
Analyzing and compiling 0052_response.c to 0052_response.o
Compilation and analysis of 0052_response.c succeeded
Analyzing and compiling 0053_response.c to 0053_response.o
Compilation and analysis of 0053_response.c succeeded
Analyzing and compiling 0054_response.c to 0054_response.o
Compilation and analysis of 0054_response.c succeeded
Analyzing and compiling 0055_response.c to 0055_response.o
Compilation and analysis of 0055_response.c succeeded
Analyzing and compiling 0056_response.c to 0056_response.o
0056_response.c:18:48: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** merged = (int**)malloc(intervalsSize * sizeof(int*));
                                 ~~~~~~~~~~~~~~^~~~~~~~~~~~~~
0056_response.c:24:53: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    *returnColumnSizes = (int*)malloc(intervalsSize * sizeof(int));
                                      ~~~~~~~~~~~~~~^~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0056_response.c succeeded
Analyzing and compiling 0057_response.c to 0057_response.o
0057_response.c:12:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** result = (int**)malloc(totalSize * sizeof(int*));
                                 ~~~~~~~~~~^~~~~~~~~~~~~~
0057_response.c:13:49: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    *returnColumnSizes = (int*)malloc(totalSize * sizeof(int));
                                      ~~~~~~~~~~^~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0057_response.c succeeded
Analyzing and compiling 0058_response.c to 0058_response.o
Compilation and analysis of 0058_response.c succeeded
Analyzing and compiling 0062_response.c to 0062_response.o
Compilation and analysis of 0062_response.c succeeded
Analyzing and compiling 0066_response.c to 0066_response.o
0066_response.c:15:52: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* newDigits = (int*)malloc((digitsSize + 1) * sizeof(int));
                                  ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0066_response.c succeeded
Analyzing and compiling 0067_response.c to 0067_response.o
0067_response.c:9:25: warning: Out of bound memory access (accessed memory precedes memory block) [alpha.security.ArrayBoundV2]
    result[max_len + 1] = '\0';
    ~~~~~~~~~~~~~~~~~~~~^~~~~~
1 warning generated.
Compilation and analysis of 0067_response.c succeeded
Analyzing and compiling 0069_response.c to 0069_response.o
0069_response.c:19:5: warning: Undefined or garbage value returned to caller [core.uninitialized.UndefReturn]
    return result;
    ^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0069_response.c succeeded
Analyzing and compiling 0070_response.c to 0070_response.o
Compilation and analysis of 0070_response.c succeeded
Analyzing and compiling 0072_response.c to 0072_response.o
0072_response.c:9:42: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int **dp = (int **)malloc((len1 + 1) * sizeof(int *));
                              ~~~~~~~~~~~^~~~~~~~~~~~~~~
0072_response.c:11:42: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
        dp[i] = (int *)malloc((len2 + 1) * sizeof(int));
                              ~~~~~~~~~~~^~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0072_response.c succeeded
Analyzing and compiling 0073_response.c to 0073_response.o
Compilation and analysis of 0073_response.c succeeded
Analyzing and compiling 0074_response.c to 0074_response.o
Compilation and analysis of 0074_response.c succeeded
Analyzing and compiling 0075_response.c to 0075_response.o
Compilation and analysis of 0075_response.c succeeded
Analyzing and compiling 0076_response.c to 0076_response.o
0076_response.c:44:5: warning: String copy function overflows the destination buffer [alpha.unix.cstring.OutOfBounds]
    strncpy(result, s + minLeft, minLen);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_string.h:128:3: note: expanded from macro 'strncpy'
                __builtin___strncpy_chk (dest, __VA_ARGS__, __darwin_obsz (dest))
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0076_response.c succeeded
Analyzing and compiling 0078_response.c to 0078_response.o
0078_response.c:4:45: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    result[*returnSize] = malloc(subsetSize * sizeof(int));
                                 ~~~~~~~~~~~^~~~~~~~~~~~~
0078_response.c:19:35: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int **result = malloc(maxSize * sizeof(int*));
                          ~~~~~~~~^~~~~~~~~~~~~~
0078_response.c:20:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    *returnColumnSizes = malloc(maxSize * sizeof(int));
                                ~~~~~~~~^~~~~~~~~~~~~
0078_response.c:22:35: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *subset = malloc(numsSize * sizeof(int));
                         ~~~~~~~~~^~~~~~~~~~~~~
4 warnings generated.
Compilation and analysis of 0078_response.c succeeded
Analyzing and compiling 0079_response.c to 0079_response.o
0079_response.c:20:50: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    bool** visited = (bool**)malloc(boardRowSize * sizeof(bool*));
                                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0079_response.c succeeded
Analyzing and compiling 0083_response.c to 0083_response.o
Compilation and analysis of 0083_response.c succeeded
Analyzing and compiling 0084_response.c to 0084_response.o
0084_response.c:5:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *stack = (int *)malloc(sizeof(int) * (heightsSize + 1));
                               ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0084_response.c succeeded
Analyzing and compiling 0088_response.c to 0088_response.o
Compilation and analysis of 0088_response.c succeeded
Analyzing and compiling 0090_response.c to 0090_response.o
0090_response.c:5:53: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    result[*returnSize] = (int*)malloc(tempListSize * sizeof(int));
                                       ~~~~~~~~~~~~~^~~~~~~~~~~~~
0090_response.c:28:50: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** result = (int**)malloc(maxCombinations * sizeof(int*));
                                 ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
0090_response.c:29:55: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    *returnColumnSizes = (int*)malloc(maxCombinations * sizeof(int));
                                      ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
0090_response.c:30:43: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* tempList = (int*)malloc(numsSize * sizeof(int));
                                 ~~~~~~~~~^~~~~~~~~~~~~
4 warnings generated.
Compilation and analysis of 0090_response.c succeeded
Analyzing and compiling 0091_response.c to 0091_response.o
Compilation and analysis of 0091_response.c succeeded
Analyzing and compiling 0094_response.c to 0094_response.o
0094_response.c:22:19: warning: Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption [alpha.core.CastToStruct]
        current = stack[top--];
                  ^~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0094_response.c succeeded
Analyzing and compiling 0096_response.c to 0096_response.o
Compilation and analysis of 0096_response.c succeeded
Analyzing and compiling 0097_response.c to 0097_response.o
Compilation and analysis of 0097_response.c succeeded
Analyzing and compiling 0098_response.c to 0098_response.o
Compilation and analysis of 0098_response.c succeeded
Analyzing and compiling 0100_response.c to 0100_response.o
Compilation and analysis of 0100_response.c succeeded
Analyzing and compiling 0104_response.c to 0104_response.o
Compilation and analysis of 0104_response.c succeeded
Analyzing and compiling 0108_response.c to 0108_response.o
Compilation and analysis of 0108_response.c succeeded
Analyzing and compiling 0110_response.c to 0110_response.o
Compilation and analysis of 0110_response.c succeeded
Analyzing and compiling 0112_response.c to 0112_response.o
Compilation and analysis of 0112_response.c succeeded
Analyzing and compiling 0115_response.c to 0115_response.o
Compilation and analysis of 0115_response.c succeeded
Analyzing and compiling 0118_response.c to 0118_response.o
0118_response.c:6:43: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** result = (int**) malloc(numRows * sizeof(int*));
                                  ~~~~~~~~^~~~~~~~~~~~~~
0118_response.c:7:48: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    *returnColumnSizes = (int*) malloc(numRows * sizeof(int));
                                       ~~~~~~~~^~~~~~~~~~~~~
0118_response.c:10:43: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
        result[i] = (int*) malloc((i + 1) * sizeof(int));
                                  ~~~~~~~~^~~~~~~~~~~~~
3 warnings generated.
Compilation and analysis of 0118_response.c succeeded
Analyzing and compiling 0120_response.c to 0120_response.o
Compilation and analysis of 0120_response.c succeeded
Analyzing and compiling 0121_response.c to 0121_response.o
Compilation and analysis of 0121_response.c succeeded
Analyzing and compiling 0122_response.c to 0122_response.o
Compilation and analysis of 0122_response.c succeeded
Analyzing and compiling 0124_response.c to 0124_response.o
Compilation and analysis of 0124_response.c succeeded
Analyzing and compiling 0125_response.c to 0125_response.o
Compilation and analysis of 0125_response.c succeeded
Analyzing and compiling 0129_response.c to 0129_response.o
Compilation and analysis of 0129_response.c succeeded
Analyzing and compiling 0130_response.c to 0130_response.o
Compilation and analysis of 0130_response.c succeeded
Analyzing and compiling 0133_response.c to 0133_response.o
0133_response.c:25:65: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    clone->neighbors = (struct Node**)malloc(node->numNeighbors * sizeof(struct Node*));
                                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0133_response.c succeeded
Analyzing and compiling 0134_response.c to 0134_response.o
Compilation and analysis of 0134_response.c succeeded
Analyzing and compiling 0135_response.c to 0135_response.o
0135_response.c:6:45: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* candies = (int*)malloc(ratingsSize * sizeof(int));
                                ~~~~~~~~~~~~^~~~~~~~~~~~~
0135_response.c:23:28: warning: The left operand of '<=' is a garbage value [core.UndefinedBinaryOperatorResult]
            if (candies[i] <= candies[i + 1]) {
                ~~~~~~~~~~ ^
0135_response.c:24:45: warning: The left operand of '+' is a garbage value [core.UndefinedBinaryOperatorResult]
                candies[i] = candies[i + 1] + 1;
                             ~~~~~~~~~~~~~~ ^
3 warnings generated.
Compilation and analysis of 0135_response.c succeeded
Analyzing and compiling 0136_response.c to 0136_response.o
Compilation and analysis of 0136_response.c succeeded
Analyzing and compiling 0138_response.c to 0138_response.o
Compilation and analysis of 0138_response.c succeeded
Analyzing and compiling 0141_response.c to 0141_response.o
Compilation and analysis of 0141_response.c succeeded
Analyzing and compiling 0142_response.c to 0142_response.o
Compilation and analysis of 0142_response.c succeeded
Analyzing and compiling 0143_response.c to 0143_response.o
Compilation and analysis of 0143_response.c succeeded
Analyzing and compiling 0148_response.c to 0148_response.o
Compilation and analysis of 0148_response.c succeeded
Analyzing and compiling 0150_response.c to 0150_response.o
0150_response.c:14:21: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
            int b = stack[top--];
                    ^~~~~~~~~~~~
0150_response.c:15:21: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
            int a = stack[top--];
                    ^~~~~~~~~~~~
0150_response.c:25:12: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
    return stack[top];
           ^~~~~~~~~~
3 warnings generated.
Compilation and analysis of 0150_response.c succeeded
Analyzing and compiling 0152_response.c to 0152_response.o
Compilation and analysis of 0152_response.c succeeded
Analyzing and compiling 0153_response.c to 0153_response.o
Compilation and analysis of 0153_response.c succeeded
Analyzing and compiling 0155_response.c to 0155_response.o
Compilation and analysis of 0155_response.c succeeded
Analyzing and compiling 0160_response.c to 0160_response.o
Compilation and analysis of 0160_response.c succeeded
Analyzing and compiling 0167_response.c to 0167_response.o
0167_response.c:24:12: warning: Potential leak of memory pointed to by 'result' [unix.Malloc]
    return NULL; // Because the problem guarantees one solution, this line is actually never reached
           ^~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/15.0.0/include/stddef.h:89:24: note: expanded from macro 'NULL'
#  define NULL ((void*)0)
                       ^
1 warning generated.
Compilation and analysis of 0167_response.c succeeded
Analyzing and compiling 0169_response.c to 0169_response.o
Compilation and analysis of 0169_response.c succeeded
Analyzing and compiling 0179_response.c to 0179_response.o
0179_response.c:15:46: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    char** strNums = (char**)malloc(numsSize * sizeof(char*));
                                    ~~~~~~~~~^~~~~~~~~~~~~~~
0179_response.c:21:20: warning: Loss of sign in implicit conversion [alpha.core.Conversion]
    qsort(strNums, numsSize, sizeof(char*), compare);
                   ^~~~~~~~
0179_response.c:30:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    char* result = (char*)malloc(length * sizeof(char));
                                 ~~~~~~~^~~~~~~~~~~~~~
3 warnings generated.
Compilation and analysis of 0179_response.c succeeded
Analyzing and compiling 0190_response.c to 0190_response.o
Compilation and analysis of 0190_response.c succeeded
Analyzing and compiling 0191_response.c to 0191_response.o
Compilation and analysis of 0191_response.c succeeded
Analyzing and compiling 0198_response.c to 0198_response.o
Compilation and analysis of 0198_response.c succeeded
Analyzing and compiling 0199_response.c to 0199_response.o
Compilation and analysis of 0199_response.c succeeded
Analyzing and compiling 0200_response.c to 0200_response.o
Compilation and analysis of 0200_response.c succeeded
Analyzing and compiling 0202_response.c to 0202_response.o
Compilation and analysis of 0202_response.c succeeded
Analyzing and compiling 0205_response.c to 0205_response.o
Compilation and analysis of 0205_response.c succeeded
Analyzing and compiling 0206_response.c to 0206_response.o
Compilation and analysis of 0206_response.c succeeded
Analyzing and compiling 0207_response.c to 0207_response.o
0207_response.c:6:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** graph = (int**)malloc(numCourses * sizeof(int*));
                                ~~~~~~~~~~~^~~~~~~~~~~~~~
0207_response.c:9:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
        graph[i] = (int*)malloc(numCourses * sizeof(int));
                                ~~~~~~~~~~~^~~~~~~~~~~~~
0207_response.c:19:31: warning: Loss of sign in implicit conversion [alpha.core.Conversion]
    int* queue = (int*)malloc(numCourses * sizeof(int));
                              ^~~~~~~~~~
0207_response.c:19:42: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* queue = (int*)malloc(numCourses * sizeof(int));
                              ~~~~~~~~~~~^~~~~~~~~~~~~
0207_response.c:33:13: warning: Assigned value is garbage or undefined [core.uninitialized.Assign]
            int nextCourse = graph[course][i];
            ^~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~
5 warnings generated.
Compilation and analysis of 0207_response.c succeeded
Analyzing and compiling 0208_response.c to 0208_response.o
Compilation and analysis of 0208_response.c succeeded
Analyzing and compiling 0209_response.c to 0209_response.o
Compilation and analysis of 0209_response.c succeeded
Analyzing and compiling 0212_response.c to 0212_response.o
0212_response.c:79:46: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    char **result = (char **)malloc(maxWords * sizeof(char *));
                                    ~~~~~~~~~^~~~~~~~~~~~~~~~
0212_response.c:81:48: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    bool **visited = (bool **)malloc(boardSize * sizeof(bool *));
                                     ~~~~~~~~~~^~~~~~~~~~~~~~~~
0212_response.c:93:18: warning: Potential leak of memory pointed to by 'trie' [unix.Malloc]
    for (int i = 0; i < boardSize; i++) {
                 ^
3 warnings generated.
Compilation and analysis of 0212_response.c succeeded
Analyzing and compiling 0213_response.c to 0213_response.o
Compilation and analysis of 0213_response.c succeeded
Analyzing and compiling 0215_response.c to 0215_response.o
0215_response.c:11:17: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
    int pivot = nums[right];
                ^~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0215_response.c succeeded
Analyzing and compiling 0226_response.c to 0226_response.o
Compilation and analysis of 0226_response.c succeeded
Analyzing and compiling 0230_response.c to 0230_response.o
Compilation and analysis of 0230_response.c succeeded
Analyzing and compiling 0234_response.c to 0234_response.o
Compilation and analysis of 0234_response.c succeeded
Analyzing and compiling 0235_response.c to 0235_response.o
Compilation and analysis of 0235_response.c succeeded
Analyzing and compiling 0238_response.c to 0238_response.o
0238_response.c:5:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* answer = (int*)malloc(numsSize * sizeof(int));
                               ~~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0238_response.c succeeded
Analyzing and compiling 0239_response.c to 0239_response.o
0239_response.c:22:40: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* deque = (int*)malloc(numsSize * sizeof(int));
                              ~~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0239_response.c succeeded
Analyzing and compiling 0242_response.c to 0242_response.o
Compilation and analysis of 0242_response.c succeeded
Analyzing and compiling 0263_response.c to 0263_response.o
Compilation and analysis of 0263_response.c succeeded
Analyzing and compiling 0268_response.c to 0268_response.o
Compilation and analysis of 0268_response.c succeeded
Analyzing and compiling 0279_response.c to 0279_response.o
0279_response.c:6:37: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *dp = (int *)malloc((n + 1) * sizeof(int));
                            ~~~~~~~~^~~~~~~~~~~~~
0279_response.c:18:18: warning: Out of bound memory access (accessed memory precedes memory block) [alpha.security.ArrayBoundV2]
    int result = dp[n];
                 ^~~~~
2 warnings generated.
Compilation and analysis of 0279_response.c succeeded
Analyzing and compiling 0283_response.c to 0283_response.o
Compilation and analysis of 0283_response.c succeeded
Analyzing and compiling 0287_response.c to 0287_response.o
Compilation and analysis of 0287_response.c succeeded
Analyzing and compiling 0297_response.c to 0297_response.o
0297_response.c:49:9: warning: Out of bound memory access (accessed memory precedes memory block) [alpha.security.ArrayBoundV2]
    if (result[strlen(result)-1] == ',') {
        ^~~~~~~~~~~~~~~~~~~~~~~~
0297_response.c:82:37: warning: 1st function call argument is an uninitialized value [core.CallAndMessage]
    struct TreeNode* root = newNode(atoi(tokens[0]));
                                    ^~~~~~~~~~~~~~~
0297_response.c:88:9: warning: Assigned value is garbage or undefined [core.uninitialized.Assign]
        struct TreeNode* parent = queue[front++];
        ^~~~~~~~~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~
3 warnings generated.
Compilation and analysis of 0297_response.c succeeded
Analyzing and compiling 0300_response.c to 0300_response.o
0300_response.c:7:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *dp = (int *)malloc(sizeof(int) * numsSize);
                            ~~~~~~~~~~~~^~~~~~~~~~
1 warning generated.
Compilation and analysis of 0300_response.c succeeded
Analyzing and compiling 0309_response.c to 0309_response.o
Compilation and analysis of 0309_response.c succeeded
Analyzing and compiling 0312_response.c to 0312_response.o
Compilation and analysis of 0312_response.c succeeded
Analyzing and compiling 0322_response.c to 0322_response.o
Compilation and analysis of 0322_response.c succeeded
Analyzing and compiling 0329_response.c to 0329_response.o
0329_response.c:35:35: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** cache = (int**)malloc(m * sizeof(int*));
                                ~~^~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0329_response.c succeeded
Analyzing and compiling 0332_response.c to 0332_response.o
0332_response.c:15:45: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    stack->items = (char **)malloc(capacity * sizeof(char *));
                                   ~~~~~~~~~^~~~~~~~~~~~~~~~
0332_response.c:32:12: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
    while (adjSize[stack->top + 1] > 0) {
           ^~~~~~~~~~~~~~~~~~~~~~~
0332_response.c:41:58: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    char **itinerary = (char **)malloc((ticketsSize + 1) * sizeof(char *));
                                       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
0332_response.c:48:54: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    char ***adj = (char ***)malloc((ticketsSize * 2) * sizeof(char **));
                                   ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
0332_response.c:52:46: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
        adj[i] = (char **)malloc(ticketsSize * sizeof(char *));
                                 ~~~~~~~~~~~~^~~~~~~~~~~~~~~~
5 warnings generated.
Compilation and analysis of 0332_response.c succeeded
Analyzing and compiling 0338_response.c to 0338_response.o
0338_response.c:5:37: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* ans = (int*)malloc((n + 1) * sizeof(int));
                            ~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0338_response.c succeeded
Analyzing and compiling 0343_response.c to 0343_response.o
Compilation and analysis of 0343_response.c succeeded
Analyzing and compiling 0344_response.c to 0344_response.o
Compilation and analysis of 0344_response.c succeeded
Analyzing and compiling 0347_response.c to 0347_response.o
0347_response.c:36:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(sizeof(int) * k);
                               ~~~~~~~~~~~~^~~
1 warning generated.
Compilation and analysis of 0347_response.c succeeded
Analyzing and compiling 0371_response.c to 0371_response.o
Compilation and analysis of 0371_response.c succeeded
Analyzing and compiling 0377_response.c to 0377_response.o
Compilation and analysis of 0377_response.c succeeded
Analyzing and compiling 0392_response.c to 0392_response.o
Compilation and analysis of 0392_response.c succeeded
Analyzing and compiling 0409_response.c to 0409_response.o
Compilation and analysis of 0409_response.c succeeded
Analyzing and compiling 0416_response.c to 0416_response.o
Compilation and analysis of 0416_response.c succeeded
Analyzing and compiling 0417_response.c to 0417_response.o
0417_response.c:18:48: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    bool** pacificReachable = (bool**)malloc(m * sizeof(bool*));
                                             ~~^~~~~~~~~~~~~~~
0417_response.c:19:49: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    bool** atlanticReachable = (bool**)malloc(m * sizeof(bool*));
                                              ~~^~~~~~~~~~~~~~~
0417_response.c:63:23: warning: Array access results in an undefined pointer dereference [core.NullDereference]
    visited[row][col] = true;
    ~~~~~~~~~~~~~~~~~~^~~~~~
3 warnings generated.
Compilation and analysis of 0417_response.c succeeded
Analyzing and compiling 0424_response.c to 0424_response.o
Compilation and analysis of 0424_response.c succeeded
Analyzing and compiling 0435_response.c to 0435_response.o
Compilation and analysis of 0435_response.c succeeded
Analyzing and compiling 0438_response.c to 0438_response.o
Compilation and analysis of 0438_response.c succeeded
Analyzing and compiling 0448_response.c to 0448_response.o
0448_response.c:12:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(sizeof(int) * numsSize);
                               ~~~~~~~~~~~~^~~~~~~~~~
1 warning generated.
Compilation and analysis of 0448_response.c succeeded
Analyzing and compiling 0463_response.c to 0463_response.o
Compilation and analysis of 0463_response.c succeeded
Analyzing and compiling 0494_response.c to 0494_response.o
Compilation and analysis of 0494_response.c succeeded
Analyzing and compiling 0518_response.c to 0518_response.o
Compilation and analysis of 0518_response.c succeeded
Analyzing and compiling 0523_response.c to 0523_response.o
Compilation and analysis of 0523_response.c succeeded
Analyzing and compiling 0543_response.c to 0543_response.o
Compilation and analysis of 0543_response.c succeeded
Analyzing and compiling 0567_response.c to 0567_response.o
Compilation and analysis of 0567_response.c succeeded
Analyzing and compiling 0572_response.c to 0572_response.o
Compilation and analysis of 0572_response.c succeeded
Analyzing and compiling 0589_response.c to 0589_response.o
0589_response.c:17:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(sizeof(int) * capacity);
                               ~~~~~~~~~~~~^~~~~~~~~~
0589_response.c:18:43: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* stack = (int*)malloc(sizeof(int) * capacity);
                              ~~~~~~~~~~~~^~~~~~~~~~
0589_response.c:19:74: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    struct Node** nodeStack = (struct Node**)malloc(sizeof(struct Node*) * capacity);
                                                    ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
3 warnings generated.
Compilation and analysis of 0589_response.c succeeded
Analyzing and compiling 0605_response.c to 0605_response.o
Compilation and analysis of 0605_response.c succeeded
Analyzing and compiling 0617_response.c to 0617_response.o
Compilation and analysis of 0617_response.c succeeded
Analyzing and compiling 0621_response.c to 0621_response.o
Compilation and analysis of 0621_response.c succeeded
Analyzing and compiling 0647_response.c to 0647_response.o
Compilation and analysis of 0647_response.c succeeded
Analyzing and compiling 0673_response.c to 0673_response.o
0673_response.c:7:42: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* lengths = (int*)malloc(numsSize * sizeof(int));
                                ~~~~~~~~~^~~~~~~~~~~~~
0673_response.c:8:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* counts = (int*)malloc(numsSize * sizeof(int));
                               ~~~~~~~~~^~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0673_response.c succeeded
Analyzing and compiling 0678_response.c to 0678_response.o
Compilation and analysis of 0678_response.c succeeded
Analyzing and compiling 0680_response.c to 0680_response.o
Compilation and analysis of 0680_response.c succeeded
Analyzing and compiling 0682_response.c to 0682_response.o
0682_response.c:5:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *stack = (int *)malloc(sizeof(int) * opsSize);
                               ~~~~~~~~~~~~^~~~~~~~~
0682_response.c:11:20: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
            sum -= stack[top--];
                   ^~~~~~~~~~~~
0682_response.c:13:32: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
            stack[++top] = 2 * stack[top];
                               ^~~~~~~~~~
0682_response.c:16:28: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
            stack[++top] = stack[top] + stack[top - 1];
                           ^~~~~~~~~~
0682_response.c:16:41: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
            stack[++top] = stack[top] + stack[top - 1];
                                        ^~~~~~~~~~~~~~
5 warnings generated.
Compilation and analysis of 0682_response.c succeeded
Analyzing and compiling 0684_response.c to 0684_response.o
Compilation and analysis of 0684_response.c succeeded
Analyzing and compiling 0691_response.c to 0691_response.o
0691_response.c:38:12: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
    return dp[(1 << targetLen) - 1];
           ^~~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0691_response.c succeeded
Analyzing and compiling 0695_response.c to 0695_response.o
Compilation and analysis of 0695_response.c succeeded
Analyzing and compiling 0704_response.c to 0704_response.o
Compilation and analysis of 0704_response.c succeeded
Analyzing and compiling 0707_response.c to 0707_response.o
Compilation and analysis of 0707_response.c succeeded
Analyzing and compiling 0724_response.c to 0724_response.o
Compilation and analysis of 0724_response.c succeeded
Analyzing and compiling 0739_response.c to 0739_response.o
0739_response.c:5:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* answer = (int*)malloc(sizeof(int) * temperaturesSize);
                               ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
0739_response.c:6:43: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* stack = (int*)malloc(sizeof(int) * temperaturesSize); // Stack to hold indices
                              ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0739_response.c succeeded
Analyzing and compiling 0740_response.c to 0740_response.o
0740_response.c:25:13: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
    dp[1] = sum[1];
            ^~~~~~
1 warning generated.
Compilation and analysis of 0740_response.c succeeded
Analyzing and compiling 0746_response.c to 0746_response.o
Compilation and analysis of 0746_response.c succeeded
Analyzing and compiling 0763_response.c to 0763_response.o
0763_response.c:12:39: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(length * sizeof(int));
                               ~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0763_response.c succeeded
Analyzing and compiling 0837_response.c to 0837_response.o
Compilation and analysis of 0837_response.c succeeded
Analyzing and compiling 0846_response.c to 0846_response.o
Compilation and analysis of 0846_response.c succeeded
Analyzing and compiling 0853_response.c to 0853_response.o
0853_response.c:10:44: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *order = (int*)malloc(positionSize * sizeof(int));
                              ~~~~~~~~~~~~~^~~~~~~~~~~~~
0853_response.c:15:18: warning: Loss of sign in implicit conversion [alpha.core.Conversion]
    qsort(order, positionSize, sizeof(int), compare);
                 ^~~~~~~~~~~~
0853_response.c:17:43: warning: Loss of sign in implicit conversion [alpha.core.Conversion]
    double *arrivalTime = (double*)malloc(positionSize * sizeof(double));
                                          ^~~~~~~~~~~~
0853_response.c:17:56: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    double *arrivalTime = (double*)malloc(positionSize * sizeof(double));
                                          ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
0853_response.c:32:28: warning: The left operand of '>' is a garbage value [core.UndefinedBinaryOperatorResult]
        if (arrivalTime[i] > lastTime) {
            ~~~~~~~~~~~~~~ ^
5 warnings generated.
Compilation and analysis of 0853_response.c succeeded
Analyzing and compiling 0875_response.c to 0875_response.o
Compilation and analysis of 0875_response.c succeeded
Analyzing and compiling 0876_response.c to 0876_response.o
Compilation and analysis of 0876_response.c succeeded
Analyzing and compiling 0881_response.c to 0881_response.o
Compilation and analysis of 0881_response.c succeeded
Analyzing and compiling 0912_response.c to 0912_response.o
0912_response.c:8:31: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* L = (int*) malloc(n1 * sizeof(int));
                           ~~~^~~~~~~~~~~~~
0912_response.c:9:31: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* R = (int*) malloc(n2 * sizeof(int));
                           ~~~^~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0912_response.c succeeded
Analyzing and compiling 0953_response.c to 0953_response.o
Compilation and analysis of 0953_response.c succeeded
Analyzing and compiling 0973_response.c to 0973_response.o
0973_response.c:15:37: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int** result = (int **)malloc(K * sizeof(int *));
                                  ~~^~~~~~~~~~~~~~~
0973_response.c:16:42: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    *returnColumnSizes = (int *)malloc(K * sizeof(int));
                                       ~~^~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 0973_response.c succeeded
Analyzing and compiling 0980_response.c to 0980_response.o
0980_response.c:31:5: warning: 4th function call argument is an uninitialized value [core.CallAndMessage]
    dfs(grid, gridSize, gridColSize, startX, startY, zeroCount, &pathCount);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 0980_response.c succeeded
Analyzing and compiling 0981_response.c to 0981_response.o
Compilation and analysis of 0981_response.c succeeded
Analyzing and compiling 0983_response.c to 0983_response.o
Compilation and analysis of 0983_response.c succeeded
Analyzing and compiling 0989_response.c to 0989_response.o
Compilation and analysis of 0989_response.c succeeded
Analyzing and compiling 0994_response.c to 0994_response.o
Compilation and analysis of 0994_response.c succeeded
Analyzing and compiling 1035_response.c to 1035_response.o
Compilation and analysis of 1035_response.c succeeded
Analyzing and compiling 1046_response.c to 1046_response.o
Compilation and analysis of 1046_response.c succeeded
Analyzing and compiling 1137_response.c to 1137_response.o
1137_response.c:14:5: warning: Undefined or garbage value returned to caller [core.uninitialized.UndefReturn]
    return tn;
    ^~~~~~~~~
1 warning generated.
Compilation and analysis of 1137_response.c succeeded
Analyzing and compiling 1143_response.c to 1143_response.o
Compilation and analysis of 1143_response.c succeeded
Analyzing and compiling 1189_response.c to 1189_response.o
Compilation and analysis of 1189_response.c succeeded
Analyzing and compiling 1288_response.c to 1288_response.o
Compilation and analysis of 1288_response.c succeeded
Analyzing and compiling 1299_response.c to 1299_response.o
1299_response.c:6:40: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(arrSize * sizeof(int));
                               ~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 1299_response.c succeeded
Analyzing and compiling 1406_response.c to 1406_response.o
Compilation and analysis of 1406_response.c succeeded
Analyzing and compiling 1448_response.c to 1448_response.o
Compilation and analysis of 1448_response.c succeeded
Analyzing and compiling 1470_response.c to 1470_response.o
1470_response.c:4:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(numsSize * sizeof(int));
                               ~~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 1470_response.c succeeded
Analyzing and compiling 1480_response.c to 1480_response.o
1480_response.c:4:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(numsSize * sizeof(int));
                               ~~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 1480_response.c succeeded
Analyzing and compiling 1626_response.c to 1626_response.o
Compilation and analysis of 1626_response.c succeeded
Analyzing and compiling 1799_response.c to 1799_response.o
1799_response.c:35:36: warning: Access out-of-bound array element (buffer overflow) [alpha.security.ArrayBound]
                dp[newMask] = fmax(dp[newMask], dp[mask] + step * gcd(nums[i], nums[j]));
                                   ^~~~~~~~~~~
1 warning generated.
Compilation and analysis of 1799_response.c succeeded
Analyzing and compiling 1838_response.c to 1838_response.o
Compilation and analysis of 1838_response.c succeeded
Analyzing and compiling 1856_response.c to 1856_response.o
1856_response.c:6:39: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* left = (int*)malloc(numsSize * sizeof(int));
                             ~~~~~~~~~^~~~~~~~~~~~~
1856_response.c:7:40: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* right = (int*)malloc(numsSize * sizeof(int));
                              ~~~~~~~~~^~~~~~~~~~~~~
1856_response.c:8:59: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    long long* prefix = (long long*)malloc((numsSize + 1) * sizeof(long long));
                                           ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
3 warnings generated.
Compilation and analysis of 1856_response.c succeeded
Analyzing and compiling 1899_response.c to 1899_response.o
Compilation and analysis of 1899_response.c succeeded
Analyzing and compiling 1905_response.c to 1905_response.o
Compilation and analysis of 1905_response.c succeeded
Analyzing and compiling 1929_response.c to 1929_response.o
Compilation and analysis of 1929_response.c succeeded
Analyzing and compiling 1930_response.c to 1930_response.o
Compilation and analysis of 1930_response.c succeeded
Analyzing and compiling 1963_response.c to 1963_response.o
Compilation and analysis of 1963_response.c succeeded
Analyzing and compiling 1964_response.c to 1964_response.o
1964_response.c:5:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *lis = (int*)malloc(sizeof(int) * obstaclesSize);
                            ~~~~~~~~~~~~^~~~~~~~~~~~~~~
1964_response.c:6:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *ans = (int*)malloc(sizeof(int) * obstaclesSize);
                            ~~~~~~~~~~~~^~~~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of 1964_response.c succeeded
Analyzing and compiling 1968_response.c to 1968_response.o
1968_response.c:13:41: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int* result = (int*)malloc(numsSize * sizeof(int));
                               ~~~~~~~~~^~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of 1968_response.c succeeded
Analyzing and compiling 2002_response.c to 2002_response.o
Compilation and analysis of 2002_response.c succeeded
Analyzing and compiling 2140_response.c to 2140_response.o
Compilation and analysis of 2140_response.c succeeded
Analyzing and compiling 2466_response.c to 2466_response.o
Compilation and analysis of 2466_response.c succeeded
Compilation and static analysis completed.
