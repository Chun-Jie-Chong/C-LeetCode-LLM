from scipy import stats
import numpy as np

# Complexity
# data1 = [10, 6, 22, 12, 10, 8, 17, 6, 7, 18, 5, 13, 4, 8, 4, 7, 5, 3, 8, 11, 6, 7, 7, 8, 8, 8, 7, 7, 4, 9, 8, 11, 3, 12, 4, 6, 9, 4, 4, 5, 9, 7, 2, 13, 20, 6, 2, 12, 2, 16, 7, 17, 5, 5, 13, 6, 2, 14, 4, 11, 4, 3, 8, 8, 7, 2, 4, 6, 2, 4, 7, 6, 15, 4, 4, 7, 1, 6, 10, 8, 9, 9, 8, 7, 3, 13, 8, 6, 6, 7, 1, 1, 7, 7, 14, 6, 3, 6, 11, 11, 6, 16, 5, 9, 2, 4, 8, 8, 2, 14, 7, 8, 1, 3, 4, 4, 17, 9, 9, 4, 10, 16, 5, 1, 5, 1, 4, 2, 3, 7, 8, 6, 19, 2, 5, 6, 4, 20, 6, 3, 7, 3, 6, 10, 4, 10, 4, 8, 5, 13, 12, 7, 10, 7, 13, 11, 6, 21, 4, 6, 8, 3, 6, 8, 7, 9, 6, 4, 2, 8, 10, 1, 17, 8, 13, 3, 20, 7, 7, 7, 12, 9, 4, 2, 5, 3, 1, 1, 10, 10, 4, 9, 12, 13, 1, 7, 7, 6, 4, 13, 5, 4]
# data2 = [10, 5, 18, 10, 10, 5, 17, 8, 6, 16, 8, 25, 8, 10, 10, 3, 3, 3, 7, 15, 5, 9, 6, 8, 9, 9, 4, 6, 2, 8, 21, 17, 4, 12, 3, 8, 9, 8, 10, 2, 8, 4, 2, 12, 16, 4, 5, 10, 5, 18, 4, 15, 8, 5, 11, 1, 2, 12, 4, 11, 3, 1, 11, 5, 6, 3, 4, 3, 2, 4, 8, 5, 16, 8, 4, 7, 1, 4, 12, 7, 12, 15, 12, 5, 3, 9, 8, 5, 4, 7, 1, 4, 8, 3, 11, 5, 17, 1, 8, 16, 6, 22, 7, 8, 2, 5, 6, 5, 2, 9, 5, 5, 1, 5, 3, 4, 7, 4, 3, 6, 11, 14, 10, 1, 3, 1, 5, 2, 4, 7, 4, 7, 24, 4, 4, 8, 3, 7, 8, 3, 15, 3, 8, 17, 2, 8, 3, 8, 7, 12, 16, 7, 13, 7, 69, 13, 6, 22, 4, 7, 8, 3, 8, 7, 11, 5, 7, 2, 6, 6, 10, 4, 21, 32, 9, 8, 16, 9, 15, 8, 9, 12, 5, 3, 10, 2, 1, 3, 11, 16, 2, 10, 15, 17, 1, 10, 5, 8, 2, 19, 4, 4]

# Complexity loop testing 
# Files without issues before: data1 is before, data2 is after
# data1 = [2, 3, 3, 4, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 10, 10, 11, 12, 13, 14, 17, 18, 22]
# data2 = [6, 3, 5, 10, 5, 5, 5, 6, 6, 7, 7, 9, 11, 7, 7, 5, 7, 8, 4, 10, 8, 10, 10, 11, 9, 12, 14, 16, 18, 26]

# Files with issues before: data1 is before, data2 is after
# data1 = [2, 2, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 7, 8, 8, 8, 8, 9, 9, 9, 10, 10, 13, 13, 16, 16, 17, 17, 19, 19]
# data2 = [2, 2, 3, 5, 6, 4, 3, 5, 7, 7, 4, 7, 4, 8, 13, 6, 9, 10, 8, 3, 11, 14, 14, 12, 14, 19, 9, 5, 17, 17]

# Complexity per loc
# data1 = [0.35714285714285715, 0.3, 0.6875, 0.36363636363636365, 0.8333333333333334, 0.6153846153846154, 0.9444444444444444, 0.3157894736842105, 0.5, 0.4, 0.2, 0.5, 0.125, 0.32, 0.18181818181818182, 0.21875, 0.38461538461538464, 0.3, 0.5, 0.4583333333333333, 0.4, 0.3888888888888889, 0.2413793103448276, 0.25806451612903225, 0.42105263157894735, 0.25806451612903225, 0.5, 0.17073170731707318, 0.23529411764705882, 0.45, 0.18181818181818182, 0.3793103448275862, 0.2, 0.375, 0.25, 0.16666666666666666, 0.2727272727272727, 0.2857142857142857, 0.2857142857142857, 0.25, 0.4090909090909091, 0.4666666666666667, 0.18181818181818182, 0.43333333333333335, 0.47619047619047616, 0.35294117647058826, 0.07142857142857142, 0.32432432432432434, 0.08695652173913043, 0.45714285714285713, 0.3888888888888889, 0.7727272727272727, 0.23809523809523808, 0.1724137931034483, 0.7647058823529411, 0.24, 0.16666666666666666, 0.7368421052631579, 0.26666666666666666, 0.5789473684210527, 0.21052631578947367, 0.15789473684210525, 0.36363636363636365, 0.47058823529411764, 0.3333333333333333, 0.125, 0.26666666666666666, 0.35294117647058826, 0.2, 0.17391304347826086, 0.3333333333333333, 0.3, 0.5172413793103449, 0.12121212121212122, 0.26666666666666666, 0.2692307692307692, 0.125, 0.16666666666666666, 0.47619047619047616, 0.3333333333333333, 0.20454545454545456, 0.2647058823529412, 0.34782608695652173, 0.35, 0.23076923076923078, 0.2826086956521739, 0.5714285714285714, 0.2857142857142857, 0.5, 0.22580645161290322, 0.1, 0.1111111111111111, 0.5, 0.2, 0.5185185185185185, 0.3157894736842105, 0.2, 0.23076923076923078, 0.2619047619047619, 0.1864406779661017, 0.4, 0.1951219512195122, 0.3125, 0.2571428571428571, 0.1111111111111111, 0.18181818181818182, 0.27586206896551724, 0.42105263157894735, 0.11764705882352941, 0.4666666666666667, 0.5, 1.0, 0.1111111111111111, 0.16666666666666666, 0.36363636363636365, 0.26666666666666666, 0.20481927710843373, 0.5, 0.6, 0.16, 0.5555555555555556, 0.3902439024390244, 0.07936507936507936, 0.1, 0.38461538461538464, 0.08333333333333333, 0.125, 0.2222222222222222, 0.1875, 0.6363636363636364, 0.38095238095238093, 0.2857142857142857, 0.31666666666666665, 0.11764705882352941, 0.2631578947368421, 0.20689655172413793, 0.2222222222222222, 1.3333333333333333, 0.2857142857142857, 0.23076923076923078, 0.3181818181818182, 0.13636363636363635, 0.35294117647058826, 0.5555555555555556, 0.12903225806451613, 0.625, 0.2222222222222222, 0.32, 0.3125, 0.41935483870967744, 0.6666666666666666, 0.30434782608695654, 0.4166666666666667, 0.2692307692307692, 0.41935483870967744, 0.4230769230769231, 0.4, 0.22105263157894736, 0.26666666666666666, 0.3, 0.2857142857142857, 0.3, 0.2727272727272727, 0.5714285714285714, 0.28, 0.2727272727272727, 0.25, 0.26666666666666666, 0.1111111111111111, 0.21052631578947367, 0.3448275862068966, 0.05, 0.5666666666666667, 0.1509433962264151, 0.65, 0.15, 0.5128205128205128, 0.4375, 0.3684210526315789, 0.5384615384615384, 0.5714285714285714, 0.6, 0.19047619047619047, 0.13333333333333333, 0.23809523809523808, 0.13636363636363635, 0.1, 0.1, 0.3125, 0.2777777777777778, 0.2, 0.2647058823529412, 0.6, 0.5, 0.1, 0.30434782608695654, 0.4375, 0.23076923076923078, 0.2, 0.2708333333333333, 0.4166666666666667, 0.2]
# data2 = [0.23809523809523808, 0.21739130434782608, 0.375, 0.2857142857142857, 0.5, 0.22727272727272727, 0.68, 0.34782608695652173, 0.3333333333333333, 0.2807017543859649, 0.27586206896551724, 0.6944444444444444, 0.12121212121212122, 0.17857142857142858, 0.4166666666666667, 0.06976744186046512, 0.25, 0.21428571428571427, 0.3333333333333333, 0.3125, 0.2777777777777778, 0.28125, 0.08695652173913043, 0.2222222222222222, 0.391304347826087, 0.3, 0.2, 0.15384615384615385, 0.10526315789473684, 0.38095238095238093, 0.25925925925925924, 0.37777777777777777, 0.23529411764705882, 0.3, 0.25, 0.18181818181818182, 0.2647058823529412, 0.6153846153846154, 0.5, 0.11764705882352941, 0.36363636363636365, 0.21052631578947367, 0.13333333333333333, 0.5217391304347826, 0.45714285714285713, 0.18181818181818182, 0.20833333333333334, 0.2222222222222222, 0.13157894736842105, 0.375, 0.25, 0.20833333333333334, 0.36363636363636365, 0.14705882352941177, 0.4782608695652174, 0.045454545454545456, 0.15384615384615385, 0.48, 0.21052631578947367, 0.6111111111111112, 0.13043478260869565, 0.047619047619047616, 0.3793103448275862, 0.3333333333333333, 0.2857142857142857, 0.15789473684210525, 0.3076923076923077, 0.13043478260869565, 0.2222222222222222, 0.14814814814814814, 0.3333333333333333, 0.22727272727272727, 0.3902439024390244, 0.21052631578947367, 0.17391304347826086, 0.2916666666666667, 0.1111111111111111, 0.07017543859649122, 0.46153846153846156, 0.25925925925925924, 0.24489795918367346, 0.2631578947368421, 0.27906976744186046, 0.2777777777777778, 0.1875, 0.0782608695652174, 0.32, 0.23809523809523808, 0.2222222222222222, 0.21212121212121213, 0.08333333333333333, 0.26666666666666666, 0.3333333333333333, 0.125, 0.44, 0.23809523809523808, 0.5483870967741935, 0.05263157894736842, 0.22857142857142856, 0.21621621621621623, 0.25, 0.2894736842105263, 0.3181818181818182, 0.23529411764705882, 0.1111111111111111, 0.18518518518518517, 0.1935483870967742, 0.2777777777777778, 0.1111111111111111, 0.15789473684210525, 0.38461538461538464, 0.3125, 0.1111111111111111, 0.2631578947368421, 0.23076923076923078, 0.25, 0.11666666666666667, 0.18181818181818182, 0.16666666666666666, 0.24, 0.4583333333333333, 0.42424242424242425, 0.23255813953488372, 0.1111111111111111, 0.15, 0.1, 0.125, 0.2, 0.2222222222222222, 0.4117647058823529, 0.21052631578947367, 0.2916666666666667, 0.35294117647058826, 0.21052631578947367, 0.13333333333333333, 0.1951219512195122, 0.15789473684210525, 0.4117647058823529, 0.2857142857142857, 0.17647058823529413, 0.38461538461538464, 0.10714285714285714, 0.23529411764705882, 0.6071428571428571, 0.1, 0.32, 0.16666666666666666, 0.4, 0.2916666666666667, 0.36363636363636365, 0.5925925925925926, 0.28, 0.22413793103448276, 0.25, 0.39655172413793105, 0.4642857142857143, 0.3157894736842105, 0.205607476635514, 0.25, 0.3684210526315789, 0.3076923076923077, 0.375, 0.34782608695652173, 0.30434782608695654, 0.55, 0.17857142857142858, 0.18421052631578946, 0.13333333333333333, 0.2222222222222222, 0.10909090909090909, 0.38461538461538464, 0.10526315789473684, 0.5384615384615384, 0.3516483516483517, 0.3333333333333333, 0.23529411764705882, 0.4, 0.5294117647058824, 0.40540540540540543, 0.5, 0.391304347826087, 0.42857142857142855, 0.21739130434782608, 0.2, 0.4, 0.10526315789473684, 0.07142857142857142, 0.3, 0.3142857142857143, 0.2962962962962963, 0.11764705882352941, 0.4166666666666667, 1.0714285714285714, 0.5862068965517241, 0.1, 0.3225806451612903, 0.22727272727272727, 0.23529411764705882, 0.1, 0.5135135135135135, 0.23529411764705882, 0.18181818181818182]

# Complexity per loc loop testing
# Files without issues before: data1 is before, data2 is after
# data1 = [0.11764705882352941, 0.16666666666666666, 0.18181818181818182, 0.1875, 0.20689655172413793, 0.21875, 0.2631578947368421, 0.2708333333333333, 0.28, 0.3, 0.3, 0.3157894736842105, 0.3181818181818182, 0.32, 0.3333333333333333, 0.35714285714285715, 0.36363636363636365, 0.38461538461538464, 0.3888888888888889, 0.4, 0.4, 0.4583333333333333, 0.5, 0.5, 0.6153846153846154, 0.6363636363636364, 0.6875, 0.7368421052631579, 0.8333333333333334, 0.9444444444444444]
# data2 = [0.42857142857142855, 0.18421052631578946, 0.45454545454545453, 0.3125, 0.25925925925925924, 0.3235294117647059, 0.21739130434782608, 0.35294117647058826, 0.27586206896551724, 0.2631578947368421, 0.3, 0.3, 0.28, 0.2857142857142857, 0.3181818181818182, 0.35714285714285715, 0.34615384615384615, 0.4166666666666667, 0.3684210526315789, 0.4090909090909091, 0.4, 0.4583333333333333, 0.5625, 0.4, 0.3333333333333333, 0.5, 0.7428571428571429, 0.7368421052631579, 0.8333333333333334, 0.5925925925925926]

# Files with issues before: data1 is before, data2 is after
# data1 = [0.07936507936507936, 0.07936507936507936, 0.08695652173913043, 0.12121212121212122, 0.125, 0.125, 0.12903225806451613, 0.16666666666666666, 0.1724137931034483, 0.1951219512195122, 0.2, 0.20481927710843373, 0.21052631578947367, 0.22580645161290322, 0.2571428571428571, 0.25806451612903225, 0.2727272727272727, 0.2727272727272727, 0.2777777777777778, 0.2857142857142857, 0.3, 0.31666666666666665, 0.31666666666666665, 0.34782608695652173, 0.4090909090909091, 0.4166666666666667, 0.41935483870967744, 0.41935483870967744, 0.45714285714285713, 0.7727272727272727]
# data2 = [0.15555555555555556, 0.15555555555555556, 0.08333333333333333, 0.20689655172413793, 0.16129032258064516, 0.125, 0.19047619047619047, 0.16666666666666666, 0.1724137931034483, 0.2235294117647059, 0.13043478260869565, 0.10416666666666667, 0.20454545454545456, 0.13333333333333333, 0.23529411764705882, 0.2222222222222222, 0.21875, 0.10714285714285714, 0.28, 0.23076923076923078, 0.23529411764705882, 0.38636363636363635, 0.38636363636363635, 0.4482758620689655, 0.43478260869565216, 0.4230769230769231, 0.45161290322580644, 0.34285714285714286, 0.3888888888888889, 0.5625]

# Line length loop testing
# Complexity: data1 is before, data2 is after
# data1 = [1, 2, 2, 2, 4, 4, 4, 5, 5, 5, 5, 5, 7, 8, 8, 8, 9, 9, 9, 12, 12, 13, 16, 17, 17, 18, 19, 20, 20, 22]
# data2 = [1, 5, 2, 4, 4, 2, 4, 5, 11, 8, 6, 6, 5, 8, 19, 7, 5, 3, 9, 7, 11, 13, 15, 9, 16, 16, 19, 10, 23, 26]
# Complexity/loc : data1 is before, data2 is after
# data1 = [0.05, 0.07936507936507936, 0.08695652173913043, 0.125, 0.125, 0.13333333333333333, 0.1724137931034483, 0.18181818181818182, 0.23529411764705882, 0.23809523809523808, 0.2413793103448276, 0.25806451612903225, 0.26666666666666666, 0.2727272727272727, 0.3125, 0.31666666666666665, 0.375, 0.4, 0.4166666666666667, 0.45714285714285713, 0.5, 0.5128205128205128, 0.5666666666666667, 0.5714285714285714, 0.6, 0.6, 0.6, 0.6875, 0.7727272727272727, 1.3333333333333333]
# data2 = [0.041666666666666664, 0.1111111111111111, 0.22727272727272727, 0.11428571428571428, 0.13333333333333333, 0.23529411764705882, 0.15151515151515152, 0.3064516129032258, 0.15384615384615385, 0.3157894736842105, 0.15625, 0.21621621621621623, 0.26666666666666666, 0.1388888888888889, 0.6111111111111112, 0.3584905660377358, 0.23333333333333334, 0.45714285714285713, 0.3, 0.4166666666666667, 0.4642857142857143, 0.41818181818181815, 0.47058823529411764, 0.4117647058823529, 0.2, 0.75, 0.7333333333333333, 0.6666666666666666, 0.5, 0.625]


# LOC loop testing
# Complexity: data1 is before, data2 is after
# data1 = [4, 5, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 10, 11, 11, 12, 12, 13, 13, 16, 16, 16, 17, 18, 19, 20, 20, 21]
# data2 = [3, 10, 7, 5, 5, 5, 10, 9, 18, 5, 6, 8, 9, 8, 11, 14, 9, 9, 12, 5, 12, 11, 14, 13, 16, 16, 13, 17, 21, 20]
# Complexity/loc : data1 is before, data2 is after
data1 = [0.07936507936507936, 0.12121212121212122, 0.1509433962264151, 0.16666666666666666, 0.16666666666666666, 0.17073170731707318, 0.18181818181818182, 0.1864406779661017, 0.1951219512195122, 0.2, 0.20454545454545456, 0.20481927710843373, 0.21052631578947367, 0.22105263157894736, 0.2571428571428571, 0.2619047619047619, 0.2647058823529412, 0.2647058823529412, 0.2708333333333333, 0.2727272727272727, 0.2777777777777778, 0.2826086956521739, 0.31666666666666665, 0.32432432432432434, 0.36363636363636365, 0.3902439024390244, 0.4, 0.45714285714285713, 0.47619047619047616, 0.5128205128205128]
data2 = [0.20833333333333334, 0.13043478260869565, 0.25, 0.25, 0.13513513513513514, 0.18518518518518517, 0.19607843137254902, 0.13636363636363635, 0.2916666666666667, 0.17857142857142858, 0.18181818181818182, 0.25, 0.375, 0.24390243902439024, 0.2647058823529412, 0.3888888888888889, 0.2857142857142857, 0.26666666666666666, 0.34285714285714286, 0.18518518518518517, 0.4230769230769231, 0.1282051282051282, 0.30952380952380953, 0.375, 0.36, 0.4642857142857143, 0.5161290322580645, 0.5, 0.6538461538461539, 0.8076923076923077]

# Perform t-test
t_stat, p_value = stats.ttest_ind(data1, data2)

print(f"T-statistic: {t_stat}")
print(f"P-value: {p_value}")
print(f"Mean of ChatGPT-4o: {np.mean(data1)}")
print(f"Mean of Human: {np.mean(data2)}")
print(f'Median of ChatGPT-4o: {np.median(data1)}')
print(f'Median of Human: {np.median(data2)}')
print(f'Geometric mean of ChatGPT-4o: {stats.gmean(data1)}')
print(f'Geometric mean of Human: {stats.gmean(data2)}')
print(f'Trimmed mean of ChatGPT-4o: {stats.trim_mean(data1, 0.05)}')
print(f'Trimmed mean of Human: {stats.trim_mean(data2, 0.05)}')
